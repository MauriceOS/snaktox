services:
  # PostgreSQL Database with PostGIS extension
  postgres:
    image: postgis/postgis:15-3.3
    container_name: snaktox-postgres
    environment:
      POSTGRES_DB: snaktox_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: snaktox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: snaktox-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/snaktox_db?schema=public
      REDIS_URL: redis://redis:6379
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    command: npm run start:dev

  # Frontend Web App
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: snaktox-web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    command: npm run dev

  # AI Service (Python FastAPI)
  ai-service:
    build:
      context: .
      dockerfile: services/ai-service/Dockerfile
    container_name: snaktox-ai
    environment:
      PYTHONPATH: /app
      AI_SERVICE_PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - ./services/ai-service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: snaktox-network
